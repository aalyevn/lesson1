.docker-hub-login-script: &docker_hub_login
  - echo "$CI_REGISTRY_PASSWORD" | docker login --username $CI_REGISTRY_USER --password-stdin


stages:
  - lint
  - terraform
  - build
  - deploy

services:
  - docker:dind

test:
  except:
    refs:
      - master
  stage: lint
  image: golangci/golangci-lint:v1.52.2
  script:
    - golangci-lint run


terraform:
  except:
    refs:
      - master
  stage: terraform
  image: hashicorp/terraform:light
  before_script:
    - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - rm -rf terraform/.terraform
    - terraform -chdir=terraform/ init
  script:
    - terraform -chdir=terraform/ fmt -check -diff
    - terraform -chdir=terraform/ validate


build&push:
  except:
    refs:
      - master
  image: docker:stable
  stage: build
  before_script:
    - *docker_hub_login
  script:
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker tag $CI_REGISTRY_IMAGE $CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - echo $CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

deploy:
  except:
    refs:
      - master
  when: manual    
  image: willhallonline/ansible:2.13-bullseye
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $prod_ip_centos >> ~/.ssh/known_hosts
    - export image=$CI_REGISTRY_USER/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  script:
    - ansible-playbook  --user $USER -i ansible/inventory/host.yaml  --become --become-user=root ansible/playbook.yaml
    - echo "Successfully deployed!"
